{"ast":null,"code":"/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [{\n      begin: /([+-]+)?[\\d]+_[\\d_]+/\n    }, {\n      begin: hljs.NUMBER_RE\n    }]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [{\n    begin: /;/,\n    end: /$/\n  }, {\n    begin: /#/,\n    end: /$/\n  }];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [{\n      begin: /\\$[\\w\\d\"][\\w\\d_]*/\n    }, {\n      begin: /\\$\\{(.*?)\\}/\n    }]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: \"'''\",\n      end: \"'''\",\n      relevance: 10\n    }, {\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: \"'\",\n      end: \"'\"\n    }]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [COMMENTS, LITERALS, VARIABLES, STRINGS, NUMBERS, 'self'],\n    relevance: 0\n  };\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE);\n  const DOTTED_KEY = regex.concat(ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*', regex.lookahead(/\\s*=\\s*[^#\\s]/));\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [COMMENTS, {\n      className: 'section',\n      begin: /\\[+/,\n      end: /\\]+/\n    }, {\n      begin: DOTTED_KEY,\n      className: 'attr',\n      starts: {\n        end: /$/,\n        contains: [COMMENTS, ARRAY, LITERALS, VARIABLES, STRINGS, NUMBERS]\n      }\n    }]\n  };\n}\n\nmodule.exports = ini;","map":{"version":3,"names":["ini","hljs","regex","NUMBERS","className","relevance","variants","begin","NUMBER_RE","COMMENTS","COMMENT","end","VARIABLES","LITERALS","STRINGS","contains","BACKSLASH_ESCAPE","ARRAY","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","ANY_KEY","either","DOTTED_KEY","concat","lookahead","name","aliases","case_insensitive","illegal","starts","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/ini.js"],"sourcesContent":["/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = ini;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,CAAaC,IAAb,EAAmB;EACjB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;EACA,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,QADG;IAEdC,SAAS,EAAE,CAFG;IAGdC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE;IAAT,CADQ,EAER;MAAEA,KAAK,EAAEN,IAAI,CAACO;IAAd,CAFQ;EAHI,CAAhB;EAQA,MAAMC,QAAQ,GAAGR,IAAI,CAACS,OAAL,EAAjB;EACAD,QAAQ,CAACH,QAAT,GAAoB,CAClB;IACEC,KAAK,EAAE,GADT;IAEEI,GAAG,EAAE;EAFP,CADkB,EAKlB;IACEJ,KAAK,EAAE,GADT;IAEEI,GAAG,EAAE;EAFP,CALkB,CAApB;EAUA,MAAMC,SAAS,GAAG;IAChBR,SAAS,EAAE,UADK;IAEhBE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE;IAAT,CADQ,EAER;MAAEA,KAAK,EAAE;IAAT,CAFQ;EAFM,CAAlB;EAOA,MAAMM,QAAQ,GAAG;IACfT,SAAS,EAAE,SADI;IAEfG,KAAK,EAAE;EAFQ,CAAjB;EAIA,MAAMO,OAAO,GAAG;IACdV,SAAS,EAAE,QADG;IAEdW,QAAQ,EAAE,CAAEd,IAAI,CAACe,gBAAP,CAFI;IAGdV,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,KADT;MAEEI,GAAG,EAAE,KAFP;MAGEN,SAAS,EAAE;IAHb,CADQ,EAMR;MACEE,KAAK,EAAE,KADT;MAEEI,GAAG,EAAE,KAFP;MAGEN,SAAS,EAAE;IAHb,CANQ,EAWR;MACEE,KAAK,EAAE,GADT;MAEEI,GAAG,EAAE;IAFP,CAXQ,EAeR;MACEJ,KAAK,EAAE,GADT;MAEEI,GAAG,EAAE;IAFP,CAfQ;EAHI,CAAhB;EAwBA,MAAMM,KAAK,GAAG;IACZV,KAAK,EAAE,IADK;IAEZI,GAAG,EAAE,IAFO;IAGZI,QAAQ,EAAE,CACRN,QADQ,EAERI,QAFQ,EAGRD,SAHQ,EAIRE,OAJQ,EAKRX,OALQ,EAMR,MANQ,CAHE;IAWZE,SAAS,EAAE;EAXC,CAAd;EAcA,MAAMa,QAAQ,GAAG,gBAAjB;EACA,MAAMC,uBAAuB,GAAG,eAAhC;EACA,MAAMC,uBAAuB,GAAG,SAAhC;EACA,MAAMC,OAAO,GAAGnB,KAAK,CAACoB,MAAN,CACdJ,QADc,EACJC,uBADI,EACqBC,uBADrB,CAAhB;EAGA,MAAMG,UAAU,GAAGrB,KAAK,CAACsB,MAAN,CACjBH,OADiB,EACR,cADQ,EACQA,OADR,EACiB,IADjB,EAEjBnB,KAAK,CAACuB,SAAN,CAAgB,eAAhB,CAFiB,CAAnB;EAKA,OAAO;IACLC,IAAI,EAAE,gBADD;IAELC,OAAO,EAAE,CAAE,MAAF,CAFJ;IAGLC,gBAAgB,EAAE,IAHb;IAILC,OAAO,EAAE,IAJJ;IAKLd,QAAQ,EAAE,CACRN,QADQ,EAER;MACEL,SAAS,EAAE,SADb;MAEEG,KAAK,EAAE,KAFT;MAGEI,GAAG,EAAE;IAHP,CAFQ,EAOR;MACEJ,KAAK,EAAEgB,UADT;MAEEnB,SAAS,EAAE,MAFb;MAGE0B,MAAM,EAAE;QACNnB,GAAG,EAAE,GADC;QAENI,QAAQ,EAAE,CACRN,QADQ,EAERQ,KAFQ,EAGRJ,QAHQ,EAIRD,SAJQ,EAKRE,OALQ,EAMRX,OANQ;MAFJ;IAHV,CAPQ;EALL,CAAP;AA6BD;;AAED4B,MAAM,CAACC,OAAP,GAAiBhC,GAAjB"},"metadata":{},"sourceType":"script"}