{"ast":null,"code":"/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)'; // TODO: move concepts like CAMEL_CASE into `modes.js`\n\n  const CLASS_NAME_RE = regex.either(/\\b([A-Z]+[a-z0-9]+)+/, // ends in caps\n  /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/);\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\"__FILE__\", \"__LINE__\"],\n    \"variable.language\": [\"self\", \"super\"],\n    keyword: [\"alias\", \"and\", \"attr_accessor\", \"attr_reader\", \"attr_writer\", \"begin\", \"BEGIN\", \"break\", \"case\", \"class\", \"defined\", \"do\", \"else\", \"elsif\", \"end\", \"END\", \"ensure\", \"for\", \"if\", \"in\", \"include\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"require\", \"rescue\", \"retry\", \"return\", \"then\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\"],\n    built_in: [\"proc\", \"lambda\"],\n    literal: [\"true\", \"false\", \"nil\"]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [hljs.COMMENT('#', '$', {\n    contains: [YARDOCTAG]\n  }), hljs.COMMENT('^=begin', '^=end', {\n    contains: [YARDOCTAG],\n    relevance: 10\n  }), hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: /%[qQwWx]?\\(/,\n      end: /\\)/\n    }, {\n      begin: /%[qQwWx]?\\[/,\n      end: /\\]/\n    }, {\n      begin: /%[qQwWx]?\\{/,\n      end: /\\}/\n    }, {\n      begin: /%[qQwWx]?</,\n      end: />/\n    }, {\n      begin: /%[qQwWx]?\\//,\n      end: /\\//\n    }, {\n      begin: /%[qQwWx]?%/,\n      end: /%/\n    }, {\n      begin: /%[qQwWx]?-/,\n      end: /-/\n    }, {\n      begin: /%[qQwWx]?\\|/,\n      end: /\\|/\n    }, // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n    // where ? is the last character of a preceding identifier, as in: `func?4`\n    {\n      begin: /\\B\\?(\\\\\\d{1,3})/\n    }, {\n      begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n    }, {\n      begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n    }, {\n      begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n    }, {\n      begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n    }, {\n      begin: /\\B\\?\\\\?\\S/\n    }, // heredocs\n    {\n      // this guard makes sure that we have an entire heredoc and not a false\n      // positive (auto-detect, etc.)\n      begin: regex.concat(/<<[-~]?'?/, regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\n      contains: [hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      })]\n    }]\n  }; // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [// decimal integer/float, optionally exponential or rational, optionally imaginary\n    {\n      begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n    }, // explicit decimal/binary/octal/hexadecimal integer,\n    // optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n    }, // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n    }]\n  };\n  const PARAMS = {\n    variants: [{\n      match: /\\(\\)/\n    }, {\n      className: 'params',\n      begin: /\\(/,\n      end: /(?=\\))/,\n      excludeBegin: true,\n      endsParent: true,\n      keywords: RUBY_KEYWORDS\n    }]\n  };\n  const CLASS_DEFINITION = {\n    variants: [{\n      match: [/class\\s+/, CLASS_NAME_WITH_NAMESPACE_RE, /\\s+<\\s+/, CLASS_NAME_WITH_NAMESPACE_RE]\n    }, {\n      match: [/class\\s+/, CLASS_NAME_WITH_NAMESPACE_RE]\n    }],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n  const METHOD_DEFINITION = {\n    match: [/def/, /\\s+/, RUBY_METHOD_RE],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [PARAMS]\n  };\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [CLASS_NAME_WITH_NAMESPACE_RE, /\\.new[ (]/],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n  const RUBY_DEFAULT_CONTAINS = [STRING, CLASS_DEFINITION, OBJECT_CREATION, UPPER_CASE_CONSTANT, METHOD_DEFINITION, {\n    // swallow namespace qualifiers before symbols\n    begin: hljs.IDENT_RE + '::'\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':(?!\\\\s)',\n    contains: [STRING, {\n      begin: RUBY_METHOD_RE\n    }],\n    relevance: 0\n  }, NUMBER, {\n    // negative-look forward attempts to prevent false matches like:\n    // @ident@ or $ident$ that might indicate this is not ruby at all\n    className: \"variable\",\n    begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n  }, {\n    className: 'params',\n    begin: /\\|/,\n    end: /\\|/,\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0,\n    // this could be a lot of things (in other languages) other than params\n    keywords: RUBY_KEYWORDS\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n    keywords: 'unless',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      illegal: /\\n/,\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: /%r\\{/,\n        end: /\\}[a-z]*/\n      }, {\n        begin: '%r\\\\(',\n        end: '\\\\)[a-z]*'\n      }, {\n        begin: '%r!',\n        end: '![a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }].concat(IRB_OBJECT, COMMENT_MODES),\n    relevance: 0\n  }].concat(IRB_OBJECT, COMMENT_MODES);\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS; // >>\n  // ?>\n\n  const SIMPLE_PROMPT = \"[>?]>\"; // irb(main):001:0>\n\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n  const IRB_DEFAULT = [{\n    begin: /^\\s*=>/,\n    starts: {\n      end: '$',\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }, {\n    className: 'meta.prompt',\n    begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n    starts: {\n      end: '$',\n      keywords: RUBY_KEYWORDS,\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }];\n  COMMENT_MODES.unshift(IRB_OBJECT);\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [hljs.SHEBANG({\n      binary: \"ruby\"\n    })].concat(IRB_DEFAULT).concat(COMMENT_MODES).concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;","map":{"version":3,"names":["ruby","hljs","regex","RUBY_METHOD_RE","CLASS_NAME_RE","either","CLASS_NAME_WITH_NAMESPACE_RE","concat","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","MATCH_NOTHING_RE","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","lookahead","END_SAME_AS_BEGIN","decimal","digits","NUMBER","PARAMS","match","excludeBegin","endsParent","CLASS_DEFINITION","scope","UPPER_CASE_CONSTANT","METHOD_DEFINITION","OBJECT_CREATION","RUBY_DEFAULT_CONTAINS","IDENT_RE","UNDERSCORE_IDENT_RE","excludeEnd","RE_STARTERS_RE","illegal","SIMPLE_PROMPT","DEFAULT_PROMPT","RVM_PROMPT","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/ruby.js"],"sourcesContent":["/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"include\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[ (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,CAAcC,IAAd,EAAoB;EAClB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;EACA,MAAMC,cAAc,GAAG,oFAAvB,CAFkB,CAGlB;;EACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CACpB,sBADoB,EAEpB;EACA,4BAHoB,CAAtB;EAMA,MAAMC,4BAA4B,GAAGJ,KAAK,CAACK,MAAN,CAAaH,aAAb,EAA4B,UAA5B,CAArC;EACA,MAAMI,aAAa,GAAG;IACpB,qBAAqB,CACnB,UADmB,EAEnB,UAFmB,CADD;IAKpB,qBAAqB,CACnB,MADmB,EAEnB,OAFmB,CALD;IASpBC,OAAO,EAAE,CACP,OADO,EAEP,KAFO,EAGP,eAHO,EAIP,aAJO,EAKP,aALO,EAMP,OANO,EAOP,OAPO,EAQP,OARO,EASP,MATO,EAUP,OAVO,EAWP,SAXO,EAYP,IAZO,EAaP,MAbO,EAcP,OAdO,EAeP,KAfO,EAgBP,KAhBO,EAiBP,QAjBO,EAkBP,KAlBO,EAmBP,IAnBO,EAoBP,IApBO,EAqBP,SArBO,EAsBP,QAtBO,EAuBP,MAvBO,EAwBP,KAxBO,EAyBP,IAzBO,EA0BP,MA1BO,EA2BP,SA3BO,EA4BP,QA5BO,EA6BP,OA7BO,EA8BP,QA9BO,EA+BP,MA/BO,EAgCP,OAhCO,EAiCP,QAjCO,EAkCP,OAlCO,EAmCP,MAnCO,EAoCP,OApCO,EAqCP,OArCO,CATW;IAgDpBC,QAAQ,EAAE,CACR,MADQ,EAER,QAFQ,CAhDU;IAoDpBC,OAAO,EAAE,CACP,MADO,EAEP,OAFO,EAGP,KAHO;EApDW,CAAtB;EA0DA,MAAMC,SAAS,GAAG;IAChBC,SAAS,EAAE,QADK;IAEhBC,KAAK,EAAE;EAFS,CAAlB;EAIA,MAAMC,UAAU,GAAG;IACjBD,KAAK,EAAE,IADU;IAEjBE,GAAG,EAAE;EAFY,CAAnB;EAIA,MAAMC,aAAa,GAAG,CACpBhB,IAAI,CAACiB,OAAL,CACE,GADF,EAEE,GAFF,EAGE;IAAEC,QAAQ,EAAE,CAAEP,SAAF;EAAZ,CAHF,CADoB,EAMpBX,IAAI,CAACiB,OAAL,CACE,SADF,EAEE,OAFF,EAGE;IACEC,QAAQ,EAAE,CAAEP,SAAF,CADZ;IAEEQ,SAAS,EAAE;EAFb,CAHF,CANoB,EAcpBnB,IAAI,CAACiB,OAAL,CAAa,UAAb,EAAyBjB,IAAI,CAACoB,gBAA9B,CAdoB,CAAtB;EAgBA,MAAMC,KAAK,GAAG;IACZT,SAAS,EAAE,OADC;IAEZC,KAAK,EAAE,KAFK;IAGZE,GAAG,EAAE,IAHO;IAIZO,QAAQ,EAAEf;EAJE,CAAd;EAMA,MAAMgB,MAAM,GAAG;IACbX,SAAS,EAAE,QADE;IAEbM,QAAQ,EAAE,CACRlB,IAAI,CAACwB,gBADG,EAERH,KAFQ,CAFG;IAMbI,QAAQ,EAAE,CACR;MACEZ,KAAK,EAAE,GADT;MAEEE,GAAG,EAAE;IAFP,CADQ,EAKR;MACEF,KAAK,EAAE,GADT;MAEEE,GAAG,EAAE;IAFP,CALQ,EASR;MACEF,KAAK,EAAE,GADT;MAEEE,GAAG,EAAE;IAFP,CATQ,EAaR;MACEF,KAAK,EAAE,aADT;MAEEE,GAAG,EAAE;IAFP,CAbQ,EAiBR;MACEF,KAAK,EAAE,aADT;MAEEE,GAAG,EAAE;IAFP,CAjBQ,EAqBR;MACEF,KAAK,EAAE,aADT;MAEEE,GAAG,EAAE;IAFP,CArBQ,EAyBR;MACEF,KAAK,EAAE,YADT;MAEEE,GAAG,EAAE;IAFP,CAzBQ,EA6BR;MACEF,KAAK,EAAE,aADT;MAEEE,GAAG,EAAE;IAFP,CA7BQ,EAiCR;MACEF,KAAK,EAAE,YADT;MAEEE,GAAG,EAAE;IAFP,CAjCQ,EAqCR;MACEF,KAAK,EAAE,YADT;MAEEE,GAAG,EAAE;IAFP,CArCQ,EAyCR;MACEF,KAAK,EAAE,aADT;MAEEE,GAAG,EAAE;IAFP,CAzCQ,EA6CR;IACA;IACA;MAAEF,KAAK,EAAE;IAAT,CA/CQ,EAgDR;MAAEA,KAAK,EAAE;IAAT,CAhDQ,EAiDR;MAAEA,KAAK,EAAE;IAAT,CAjDQ,EAkDR;MAAEA,KAAK,EAAE;IAAT,CAlDQ,EAmDR;MAAEA,KAAK,EAAE;IAAT,CAnDQ,EAoDR;MAAEA,KAAK,EAAE;IAAT,CApDQ,EAqDR;IACA;MACE;MACA;MACAA,KAAK,EAAEZ,KAAK,CAACK,MAAN,CACL,WADK,EAELL,KAAK,CAACyB,SAAN,CAAgB,0CAAhB,CAFK,CAHT;MAOER,QAAQ,EAAE,CACRlB,IAAI,CAAC2B,iBAAL,CAAuB;QACrBd,KAAK,EAAE,OADc;QAErBE,GAAG,EAAE,OAFgB;QAGrBG,QAAQ,EAAE,CACRlB,IAAI,CAACwB,gBADG,EAERH,KAFQ;MAHW,CAAvB,CADQ;IAPZ,CAtDQ;EANG,CAAf,CAnGkB,CAoLlB;EACA;EACA;;EACA,MAAMO,OAAO,GAAG,mBAAhB;EACA,MAAMC,MAAM,GAAG,iBAAf;EACA,MAAMC,MAAM,GAAG;IACblB,SAAS,EAAE,QADE;IAEbO,SAAS,EAAE,CAFE;IAGbM,QAAQ,EAAE,CACR;IACA;MAAEZ,KAAK,EAAG,OAAMe,OAAQ,SAAQC,MAAO,iBAAgBA,MAAO;IAA9D,CAFQ,EAIR;IACA;IACA;MAAEhB,KAAK,EAAE;IAAT,CANQ,EAOR;MAAEA,KAAK,EAAE;IAAT,CAPQ,EAQR;MAAEA,KAAK,EAAE;IAAT,CARQ,EASR;MAAEA,KAAK,EAAE;IAAT,CATQ,EAWR;IACA;MAAEA,KAAK,EAAE;IAAT,CAZQ;EAHG,CAAf;EAmBA,MAAMkB,MAAM,GAAG;IACbN,QAAQ,EAAE,CACR;MACEO,KAAK,EAAE;IADT,CADQ,EAIR;MACEpB,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,IAFT;MAGEE,GAAG,EAAE,QAHP;MAIEkB,YAAY,EAAE,IAJhB;MAKEC,UAAU,EAAE,IALd;MAMEZ,QAAQ,EAAEf;IANZ,CAJQ;EADG,CAAf;EAgBA,MAAM4B,gBAAgB,GAAG;IACvBV,QAAQ,EAAE,CACR;MACEO,KAAK,EAAE,CACL,UADK,EAEL3B,4BAFK,EAGL,SAHK,EAILA,4BAJK;IADT,CADQ,EASR;MACE2B,KAAK,EAAE,CACL,UADK,EAEL3B,4BAFK;IADT,CATQ,CADa;IAiBvB+B,KAAK,EAAE;MACL,GAAG,aADE;MAEL,GAAG;IAFE,CAjBgB;IAqBvBd,QAAQ,EAAEf;EArBa,CAAzB;EAwBA,MAAM8B,mBAAmB,GAAG;IAC1BlB,SAAS,EAAE,CADe;IAE1Ba,KAAK,EAAE,qBAFmB;IAG1BpB,SAAS,EAAE;EAHe,CAA5B;EAMA,MAAM0B,iBAAiB,GAAG;IACxBN,KAAK,EAAE,CACL,KADK,EACE,KADF,EAEL9B,cAFK,CADiB;IAKxBkC,KAAK,EAAE;MACL,GAAG,SADE;MAEL,GAAG;IAFE,CALiB;IASxBlB,QAAQ,EAAE,CACRa,MADQ;EATc,CAA1B;EAcA,MAAMQ,eAAe,GAAG;IACtBpB,SAAS,EAAE,CADW;IAEtBa,KAAK,EAAE,CACL3B,4BADK,EAEL,WAFK,CAFe;IAMtB+B,KAAK,EAAE;MACL,GAAG;IADE;EANe,CAAxB;EAWA,MAAMI,qBAAqB,GAAG,CAC5BjB,MAD4B,EAE5BY,gBAF4B,EAG5BI,eAH4B,EAI5BF,mBAJ4B,EAK5BC,iBAL4B,EAM5B;IACE;IACAzB,KAAK,EAAEb,IAAI,CAACyC,QAAL,GAAgB;EAFzB,CAN4B,EAS5B;IACE7B,SAAS,EAAE,QADb;IAEEC,KAAK,EAAEb,IAAI,CAAC0C,mBAAL,GAA2B,WAFpC;IAGEvB,SAAS,EAAE;EAHb,CAT4B,EAc5B;IACEP,SAAS,EAAE,QADb;IAEEC,KAAK,EAAE,UAFT;IAGEK,QAAQ,EAAE,CACRK,MADQ,EAER;MAAEV,KAAK,EAAEX;IAAT,CAFQ,CAHZ;IAOEiB,SAAS,EAAE;EAPb,CAd4B,EAuB5BW,MAvB4B,EAwB5B;IACE;IACA;IACAlB,SAAS,EAAE,UAHb;IAIEC,KAAK,EAAE,yCAA0C;EAJnD,CAxB4B,EA8B5B;IACED,SAAS,EAAE,QADb;IAEEC,KAAK,EAAE,IAFT;IAGEE,GAAG,EAAE,IAHP;IAIEkB,YAAY,EAAE,IAJhB;IAKEU,UAAU,EAAE,IALd;IAMExB,SAAS,EAAE,CANb;IAMgB;IACdG,QAAQ,EAAEf;EAPZ,CA9B4B,EAuC5B;IAAE;IACAM,KAAK,EAAE,MAAMb,IAAI,CAAC4C,cAAX,GAA4B,cADrC;IAEEtB,QAAQ,EAAE,QAFZ;IAGEJ,QAAQ,EAAE,CACR;MACEN,SAAS,EAAE,QADb;MAEEM,QAAQ,EAAE,CACRlB,IAAI,CAACwB,gBADG,EAERH,KAFQ,CAFZ;MAMEwB,OAAO,EAAE,IANX;MAOEpB,QAAQ,EAAE,CACR;QACEZ,KAAK,EAAE,GADT;QAEEE,GAAG,EAAE;MAFP,CADQ,EAKR;QACEF,KAAK,EAAE,MADT;QAEEE,GAAG,EAAE;MAFP,CALQ,EASR;QACEF,KAAK,EAAE,OADT;QAEEE,GAAG,EAAE;MAFP,CATQ,EAaR;QACEF,KAAK,EAAE,KADT;QAEEE,GAAG,EAAE;MAFP,CAbQ,EAiBR;QACEF,KAAK,EAAE,OADT;QAEEE,GAAG,EAAE;MAFP,CAjBQ;IAPZ,CADQ,EA+BRT,MA/BQ,CA+BDQ,UA/BC,EA+BWE,aA/BX,CAHZ;IAmCEG,SAAS,EAAE;EAnCb,CAvC4B,EA4E5Bb,MA5E4B,CA4ErBQ,UA5EqB,EA4ETE,aA5ES,CAA9B;EA8EAK,KAAK,CAACH,QAAN,GAAiBsB,qBAAjB;EACAT,MAAM,CAACb,QAAP,GAAkBsB,qBAAlB,CAlWkB,CAoWlB;EACA;;EACA,MAAMM,aAAa,GAAG,OAAtB,CAtWkB,CAuWlB;;EACA,MAAMC,cAAc,GAAG,iCAAvB;EACA,MAAMC,UAAU,GAAG,gDAAnB;EAEA,MAAMC,WAAW,GAAG,CAClB;IACEpC,KAAK,EAAE,QADT;IAEEqC,MAAM,EAAE;MACNnC,GAAG,EAAE,GADC;MAENG,QAAQ,EAAEsB;IAFJ;EAFV,CADkB,EAQlB;IACE5B,SAAS,EAAE,aADb;IAEEC,KAAK,EAAE,OAAOiC,aAAP,GAAuB,GAAvB,GAA6BC,cAA7B,GAA8C,GAA9C,GAAoDC,UAApD,GAAiE,UAF1E;IAGEE,MAAM,EAAE;MACNnC,GAAG,EAAE,GADC;MAENO,QAAQ,EAAEf,aAFJ;MAGNW,QAAQ,EAAEsB;IAHJ;EAHV,CARkB,CAApB;EAmBAxB,aAAa,CAACmC,OAAd,CAAsBrC,UAAtB;EAEA,OAAO;IACLsC,IAAI,EAAE,MADD;IAELC,OAAO,EAAE,CACP,IADO,EAEP,SAFO,EAGP,SAHO,EAIP,MAJO,EAKP,KALO,CAFJ;IASL/B,QAAQ,EAAEf,aATL;IAULsC,OAAO,EAAE,MAVJ;IAWL3B,QAAQ,EAAE,CAAElB,IAAI,CAACsD,OAAL,CAAa;MAAEC,MAAM,EAAE;IAAV,CAAb,CAAF,EACPjD,MADO,CACA2C,WADA,EAEP3C,MAFO,CAEAU,aAFA,EAGPV,MAHO,CAGAkC,qBAHA;EAXL,CAAP;AAgBD;;AAEDgB,MAAM,CAACC,OAAP,GAAiB1D,IAAjB"},"metadata":{},"sourceType":"script"}