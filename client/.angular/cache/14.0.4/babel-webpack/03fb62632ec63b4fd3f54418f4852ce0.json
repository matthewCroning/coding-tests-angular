{"ast":null,"code":"/*\nLanguage: Cap’n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap’n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  const KEYWORDS = [\"struct\", \"enum\", \"interface\", \"union\", \"group\", \"import\", \"using\", \"const\", \"annotation\", \"extends\", \"in\", \"of\", \"on\", \"as\", \"with\", \"from\", \"fixed\"];\n  const TYPES = [\"Void\", \"Bool\", \"Int8\", \"Int16\", \"Int32\", \"Int64\", \"UInt8\", \"UInt16\", \"UInt32\", \"UInt64\", \"Float32\", \"Float64\", \"Text\", \"Data\", \"AnyPointer\", \"AnyStruct\", \"Capability\", \"List\"];\n  const LITERALS = [\"true\", \"false\"];\n  const CLASS_DEFINITION = {\n    variants: [{\n      match: [/(struct|enum|interface)/, /\\s+/, hljs.IDENT_RE]\n    }, {\n      match: [/extends/, /\\s*\\(/, hljs.IDENT_RE, /\\s*\\)/]\n    }],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  return {\n    name: 'Cap’n Proto',\n    aliases: ['capnp'],\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: LITERALS\n    },\n    contains: [hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, hljs.HASH_COMMENT_MODE, {\n      className: 'meta',\n      begin: /@0x[\\w\\d]{16};/,\n      illegal: /\\n/\n    }, {\n      className: 'symbol',\n      begin: /@\\d+\\b/\n    }, CLASS_DEFINITION]\n  };\n}\n\nmodule.exports = capnproto;","map":{"version":3,"names":["capnproto","hljs","KEYWORDS","TYPES","LITERALS","CLASS_DEFINITION","variants","match","IDENT_RE","scope","name","aliases","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","HASH_COMMENT_MODE","className","begin","illegal","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/capnproto.js"],"sourcesContent":["/*\nLanguage: Cap’n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap’n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  const KEYWORDS = [\n    \"struct\",\n    \"enum\",\n    \"interface\",\n    \"union\",\n    \"group\",\n    \"import\",\n    \"using\",\n    \"const\",\n    \"annotation\",\n    \"extends\",\n    \"in\",\n    \"of\",\n    \"on\",\n    \"as\",\n    \"with\",\n    \"from\",\n    \"fixed\"\n  ];\n  const TYPES = [\n    \"Void\",\n    \"Bool\",\n    \"Int8\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"UInt8\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"Float32\",\n    \"Float64\",\n    \"Text\",\n    \"Data\",\n    \"AnyPointer\",\n    \"AnyStruct\",\n    \"Capability\",\n    \"List\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n  const CLASS_DEFINITION = {\n    variants: [\n      { match: [\n        /(struct|enum|interface)/,\n        /\\s+/,\n        hljs.IDENT_RE\n      ] },\n      { match: [\n        /extends/,\n        /\\s*\\(/,\n        hljs.IDENT_RE,\n        /\\s*\\)/\n      ] }\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  return {\n    name: 'Cap’n Proto',\n    aliases: [ 'capnp' ],\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      CLASS_DEFINITION\n    ]\n  };\n}\n\nmodule.exports = capnproto;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,MAAMC,QAAQ,GAAG,CACf,QADe,EAEf,MAFe,EAGf,WAHe,EAIf,OAJe,EAKf,OALe,EAMf,QANe,EAOf,OAPe,EAQf,OARe,EASf,YATe,EAUf,SAVe,EAWf,IAXe,EAYf,IAZe,EAaf,IAbe,EAcf,IAde,EAef,MAfe,EAgBf,MAhBe,EAiBf,OAjBe,CAAjB;EAmBA,MAAMC,KAAK,GAAG,CACZ,MADY,EAEZ,MAFY,EAGZ,MAHY,EAIZ,OAJY,EAKZ,OALY,EAMZ,OANY,EAOZ,OAPY,EAQZ,QARY,EASZ,QATY,EAUZ,QAVY,EAWZ,SAXY,EAYZ,SAZY,EAaZ,MAbY,EAcZ,MAdY,EAeZ,YAfY,EAgBZ,WAhBY,EAiBZ,YAjBY,EAkBZ,MAlBY,CAAd;EAoBA,MAAMC,QAAQ,GAAG,CACf,MADe,EAEf,OAFe,CAAjB;EAIA,MAAMC,gBAAgB,GAAG;IACvBC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,CACP,yBADO,EAEP,KAFO,EAGPN,IAAI,CAACO,QAHE;IAAT,CADQ,EAMR;MAAED,KAAK,EAAE,CACP,SADO,EAEP,OAFO,EAGPN,IAAI,CAACO,QAHE,EAIP,OAJO;IAAT,CANQ,CADa;IAcvBC,KAAK,EAAE;MACL,GAAG,SADE;MAEL,GAAG;IAFE;EAdgB,CAAzB;EAmBA,OAAO;IACLC,IAAI,EAAE,aADD;IAELC,OAAO,EAAE,CAAE,OAAF,CAFJ;IAGLC,QAAQ,EAAE;MACRC,OAAO,EAAEX,QADD;MAERY,IAAI,EAAEX,KAFE;MAGRY,OAAO,EAAEX;IAHD,CAHL;IAQLY,QAAQ,EAAE,CACRf,IAAI,CAACgB,iBADG,EAERhB,IAAI,CAACiB,WAFG,EAGRjB,IAAI,CAACkB,iBAHG,EAIR;MACEC,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE,gBAFT;MAGEC,OAAO,EAAE;IAHX,CAJQ,EASR;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE;IAFT,CATQ,EAaRhB,gBAbQ;EARL,CAAP;AAwBD;;AAEDkB,MAAM,CAACC,OAAP,GAAiBxB,SAAjB"},"metadata":{},"sourceType":"script"}