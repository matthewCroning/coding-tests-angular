{"ast":null,"code":"/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex; // Element names can contain letters, digits, hyphens, underscores, and periods\n\n  const TAG_NAME_RE = regex.concat(/[A-Z_]/, regex.optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [{\n      className: 'keyword',\n      begin: /#?[a-z_][a-z1-9_-]+/,\n      illegal: /\\n/\n    }]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /'/,\n          end: /'/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: /<![a-z]/,\n      end: />/,\n      relevance: 10,\n      contains: [XML_META_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE, XML_META_PAR_KEYWORDS, {\n        begin: /\\[/,\n        end: /\\]/,\n        contains: [{\n          className: 'meta',\n          begin: /<![a-z]/,\n          end: />/,\n          contains: [XML_META_KEYWORDS, XML_META_PAR_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE]\n        }]\n      }]\n    }, hljs.COMMENT(/<!--/, /-->/, {\n      relevance: 10\n    }), {\n      begin: /<!\\[CDATA\\[/,\n      end: /\\]\\]>/,\n      relevance: 10\n    }, XML_ENTITIES, // xml processing instructions\n    {\n      className: 'meta',\n      end: /\\?>/,\n      variants: [{\n        begin: /<\\?xml/,\n        relevance: 10,\n        contains: [QUOTE_META_STRING_MODE]\n      }, {\n        begin: /<\\?[a-z][a-z0-9]+/\n      }]\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending bracket.\n      */\n      begin: /<style(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/style>/,\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: /<script(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/script>/,\n        returnEnd: true,\n        subLanguage: ['javascript', 'handlebars', 'xml']\n      }\n    }, // we need this for now for jSX\n    {\n      className: 'tag',\n      begin: /<>|<\\/>/\n    }, // open tag\n    {\n      className: 'tag',\n      begin: regex.concat(/</, regex.lookahead(regex.concat(TAG_NAME_RE, // <tag/>\n      // <tag>\n      // <tag ...\n      regex.either(/\\/>/, />/, /\\s/)))),\n      end: /\\/?>/,\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0,\n        starts: TAG_INTERNALS\n      }]\n    }, // close tag\n    {\n      className: 'tag',\n      begin: regex.concat(/<\\//, regex.lookahead(regex.concat(TAG_NAME_RE, />/))),\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0\n      }, {\n        begin: />/,\n        relevance: 0,\n        endsParent: true\n      }]\n    }]\n  };\n}\n\nmodule.exports = xml;","map":{"version":3,"names":["xml","hljs","regex","TAG_NAME_RE","concat","optional","XML_IDENT_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","lookahead","either","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/xml.js"],"sourcesContent":["/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = regex.concat(/[A-Z_]/, regex.optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              { begin: /[^\\s\"'=<>`]+/ }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        { relevance: 10 }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      // xml processing instructions\n      {\n        className: 'meta',\n        end: /\\?>/,\n        variants: [\n          {\n            begin: /<\\?xml/,\n            relevance: 10,\n            contains: [\n              QUOTE_META_STRING_MODE\n            ]\n          },\n          {\n            begin: /<\\?[a-z][a-z0-9]+/,\n          }\n        ]\n\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'style' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'script' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}