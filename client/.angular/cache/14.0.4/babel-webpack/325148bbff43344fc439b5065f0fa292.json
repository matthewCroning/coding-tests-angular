{"ast":null,"code":"/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\nfunction thrift(hljs) {\n  const TYPES = [\"bool\", \"byte\", \"i16\", \"i32\", \"i64\", \"double\", \"string\", \"binary\"];\n  const KEYWORDS = [\"namespace\", \"const\", \"typedef\", \"struct\", \"enum\", \"service\", \"exception\", \"void\", \"oneway\", \"set\", \"list\", \"map\", \"required\", \"optional\"];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'class',\n      beginKeywords: 'struct enum service exception',\n      end: /\\{/,\n      illegal: /\\n/,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        // hack: eating everything after the first title\n        starts: {\n          endsWithParent: true,\n          excludeEnd: true\n        }\n      })]\n    }, {\n      begin: '\\\\b(set|list|map)\\\\s*<',\n      keywords: {\n        type: [...TYPES, \"set\", \"list\", \"map\"]\n      },\n      end: '>',\n      contains: ['self']\n    }]\n  };\n}\n\nmodule.exports = thrift;","map":{"version":3,"names":["thrift","hljs","TYPES","KEYWORDS","name","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/thrift.js"],"sourcesContent":["/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\n\nfunction thrift(hljs) {\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"double\",\n    \"string\",\n    \"binary\"\n  ];\n  const KEYWORDS = [\n    \"namespace\",\n    \"const\",\n    \"typedef\",\n    \"struct\",\n    \"enum\",\n    \"service\",\n    \"exception\",\n    \"void\",\n    \"oneway\",\n    \"set\",\n    \"list\",\n    \"map\",\n    \"required\",\n    \"optional\"\n  ];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            // hack: eating everything after the first title\n            starts: {\n              endsWithParent: true,\n              excludeEnd: true\n            } })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<',\n        keywords: { type: [\n          ...TYPES,\n          \"set\",\n          \"list\",\n          \"map\"\n        ] },\n        end: '>',\n        contains: [ 'self' ]\n      }\n    ]\n  };\n}\n\nmodule.exports = thrift;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;EACpB,MAAMC,KAAK,GAAG,CACZ,MADY,EAEZ,MAFY,EAGZ,KAHY,EAIZ,KAJY,EAKZ,KALY,EAMZ,QANY,EAOZ,QAPY,EAQZ,QARY,CAAd;EAUA,MAAMC,QAAQ,GAAG,CACf,WADe,EAEf,OAFe,EAGf,SAHe,EAIf,QAJe,EAKf,MALe,EAMf,SANe,EAOf,WAPe,EAQf,MARe,EASf,QATe,EAUf,KAVe,EAWf,MAXe,EAYf,KAZe,EAaf,UAbe,EAcf,UAde,CAAjB;EAgBA,OAAO;IACLC,IAAI,EAAE,QADD;IAELC,QAAQ,EAAE;MACRC,OAAO,EAAEH,QADD;MAERI,IAAI,EAAEL,KAFE;MAGRM,OAAO,EAAE;IAHD,CAFL;IAOLC,QAAQ,EAAE,CACRR,IAAI,CAACS,iBADG,EAERT,IAAI,CAACU,WAFG,EAGRV,IAAI,CAACW,mBAHG,EAIRX,IAAI,CAACY,oBAJG,EAKR;MACEC,SAAS,EAAE,OADb;MAEEC,aAAa,EAAE,+BAFjB;MAGEC,GAAG,EAAE,IAHP;MAIEC,OAAO,EAAE,IAJX;MAKER,QAAQ,EAAE,CACRR,IAAI,CAACiB,OAAL,CAAajB,IAAI,CAACkB,UAAlB,EAA8B;QAC5B;QACAC,MAAM,EAAE;UACNC,cAAc,EAAE,IADV;UAENC,UAAU,EAAE;QAFN;MAFoB,CAA9B,CADQ;IALZ,CALQ,EAmBR;MACEC,KAAK,EAAE,wBADT;MAEElB,QAAQ,EAAE;QAAEE,IAAI,EAAE,CAChB,GAAGL,KADa,EAEhB,KAFgB,EAGhB,MAHgB,EAIhB,KAJgB;MAAR,CAFZ;MAQEc,GAAG,EAAE,GARP;MASEP,QAAQ,EAAE,CAAE,MAAF;IATZ,CAnBQ;EAPL,CAAP;AAuCD;;AAEDe,MAAM,CAACC,OAAP,GAAiBzB,MAAjB"},"metadata":{},"sourceType":"script"}