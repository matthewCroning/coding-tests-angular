{"ast":null,"code":"/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex; // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [{\n      begin: /\\\\\\n/\n    }]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)(' + DECLTYPE_AUTO_RE + '|' + regex.optional(NAMESPACE_RE) + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE) + ')';\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  }; // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [{\n      begin: '(u8?|U|L)?\"',\n      end: '\"',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n      end: '\\'',\n      illegal: '.'\n    }, hljs.END_SAME_AS_BEGIN({\n      begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n      end: /\\)([^()\\\\ ]{0,16})\"/\n    })]\n  };\n  const NUMBERS = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(0b[01\\']+)'\n    }, {\n      begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n    }, {\n      begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n    }],\n    relevance: 0\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword: 'if else elif endif define undef warning error line ' + 'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, hljs.inherit(STRINGS, {\n      className: 'string'\n    }), {\n      className: 'string',\n      begin: /<.*?>/\n    }, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\('; // https://en.cppreference.com/w/cpp/keyword\n\n  const RESERVED_KEYWORDS = ['alignas', 'alignof', 'and', 'and_eq', 'asm', 'atomic_cancel', 'atomic_commit', 'atomic_noexcept', 'auto', 'bitand', 'bitor', 'break', 'case', 'catch', 'class', 'co_await', 'co_return', 'co_yield', 'compl', 'concept', 'const_cast|10', 'consteval', 'constexpr', 'constinit', 'continue', 'decltype', 'default', 'delete', 'do', 'dynamic_cast|10', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'final', 'for', 'friend', 'goto', 'if', 'import', 'inline', 'module', 'mutable', 'namespace', 'new', 'noexcept', 'not', 'not_eq', 'nullptr', 'operator', 'or', 'or_eq', 'override', 'private', 'protected', 'public', 'reflexpr', 'register', 'reinterpret_cast|10', 'requires', 'return', 'sizeof', 'static_assert', 'static_cast|10', 'struct', 'switch', 'synchronized', 'template', 'this', 'thread_local', 'throw', 'transaction_safe', 'transaction_safe_dynamic', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'using', 'virtual', 'volatile', 'while', 'xor', 'xor_eq']; // https://en.cppreference.com/w/cpp/keyword\n\n  const RESERVED_TYPES = ['bool', 'char', 'char16_t', 'char32_t', 'char8_t', 'double', 'float', 'int', 'long', 'short', 'void', 'wchar_t', 'unsigned', 'signed', 'const', 'static'];\n  const TYPE_HINTS = ['any', 'auto_ptr', 'barrier', 'binary_semaphore', 'bitset', 'complex', 'condition_variable', 'condition_variable_any', 'counting_semaphore', 'deque', 'false_type', 'future', 'imaginary', 'initializer_list', 'istringstream', 'jthread', 'latch', 'lock_guard', 'multimap', 'multiset', 'mutex', 'optional', 'ostringstream', 'packaged_task', 'pair', 'promise', 'priority_queue', 'queue', 'recursive_mutex', 'recursive_timed_mutex', 'scoped_lock', 'set', 'shared_future', 'shared_lock', 'shared_mutex', 'shared_timed_mutex', 'shared_ptr', 'stack', 'string_view', 'stringstream', 'timed_mutex', 'thread', 'true_type', 'tuple', 'unique_lock', 'unique_ptr', 'unordered_map', 'unordered_multimap', 'unordered_multiset', 'unordered_set', 'variant', 'vector', 'weak_ptr', 'wstring', 'wstring_view'];\n  const FUNCTION_HINTS = ['abort', 'abs', 'acos', 'apply', 'as_const', 'asin', 'atan', 'atan2', 'calloc', 'ceil', 'cerr', 'cin', 'clog', 'cos', 'cosh', 'cout', 'declval', 'endl', 'exchange', 'exit', 'exp', 'fabs', 'floor', 'fmod', 'forward', 'fprintf', 'fputs', 'free', 'frexp', 'fscanf', 'future', 'invoke', 'isalnum', 'isalpha', 'iscntrl', 'isdigit', 'isgraph', 'islower', 'isprint', 'ispunct', 'isspace', 'isupper', 'isxdigit', 'labs', 'launder', 'ldexp', 'log', 'log10', 'make_pair', 'make_shared', 'make_shared_for_overwrite', 'make_tuple', 'make_unique', 'malloc', 'memchr', 'memcmp', 'memcpy', 'memset', 'modf', 'move', 'pow', 'printf', 'putchar', 'puts', 'realloc', 'scanf', 'sin', 'sinh', 'snprintf', 'sprintf', 'sqrt', 'sscanf', 'std', 'stderr', 'stdin', 'stdout', 'strcat', 'strchr', 'strcmp', 'strcpy', 'strcspn', 'strlen', 'strncat', 'strncmp', 'strncpy', 'strpbrk', 'strrchr', 'strspn', 'strstr', 'swap', 'tan', 'tanh', 'terminate', 'to_underlying', 'tolower', 'toupper', 'vfprintf', 'visit', 'vprintf', 'vsprintf'];\n  const LITERALS = ['NULL', 'false', 'nullopt', 'nullptr', 'true']; // https://en.cppreference.com/w/cpp/keyword\n\n  const BUILT_IN = ['_Pragma'];\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: regex.concat(/\\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, hljs.IDENT_RE, regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n  const EXPRESSION_CONTAINS = [FUNCTION_DISPATCH, PREPROCESSOR, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS];\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [{\n      begin: /=/,\n      end: /;/\n    }, {\n      begin: /\\(/,\n      end: /\\)/\n    }, {\n      beginKeywords: 'new throw return else',\n      end: /;/\n    }],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      contains: EXPRESSION_CONTAINS.concat(['self']),\n      relevance: 0\n    }]),\n    relevance: 0\n  };\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [{\n      // to prevent it from being confused as the function title\n      begin: DECLTYPE_AUTO_RE,\n      keywords: CPP_KEYWORDS,\n      relevance: 0\n    }, {\n      begin: FUNCTION_TITLE,\n      returnBegin: true,\n      contains: [TITLE_MODE],\n      relevance: 0\n    }, // needed because we do not have look-behind on the below rule\n    // to prevent it from grabbing the final : in a :: pair\n    {\n      begin: /::/,\n      relevance: 0\n    }, // initializers\n    {\n      begin: /:/,\n      endsWithParent: true,\n      contains: [STRINGS, NUMBERS]\n    }, // allow for multiple declarations, e.g.:\n    // extern void f(int), g(char);\n    {\n      relevance: 0,\n      match: /,/\n    }, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      relevance: 0,\n      contains: [C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES, // Count matching parentheses.\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: ['self', C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES]\n      }]\n    }, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, PREPROCESSOR]\n  };\n  return {\n    name: 'C++',\n    aliases: ['cc', 'c++', 'h++', 'hpp', 'hh', 'hxx', 'cxx'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(EXPRESSION_CONTEXT, FUNCTION_DECLARATION, FUNCTION_DISPATCH, EXPRESSION_CONTAINS, [PREPROCESSOR, {\n      // containers: ie, `vector <int> rooms (9);`\n      begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n      end: '>',\n      keywords: CPP_KEYWORDS,\n      contains: ['self', CPP_PRIMITIVE_TYPES]\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: CPP_KEYWORDS\n    }, {\n      match: [// extra complexity to deal with `enum class` and `enum struct`\n      /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/, /\\s+/, /\\w+/],\n      className: {\n        1: 'keyword',\n        3: 'title.class'\n      }\n    }])\n  };\n}\n\nmodule.exports = cpp;","map":{"version":3,"names":["cpp","hljs","regex","C_LINE_COMMENT_MODE","COMMENT","contains","begin","DECLTYPE_AUTO_RE","NAMESPACE_RE","TEMPLATE_ARGUMENT_RE","FUNCTION_TYPE_RE","optional","CPP_PRIMITIVE_TYPES","className","CHARACTER_ESCAPES","STRINGS","variants","end","illegal","BACKSLASH_ESCAPE","END_SAME_AS_BEGIN","NUMBERS","relevance","PREPROCESSOR","keywords","keyword","inherit","C_BLOCK_COMMENT_MODE","TITLE_MODE","IDENT_RE","FUNCTION_TITLE","RESERVED_KEYWORDS","RESERVED_TYPES","TYPE_HINTS","FUNCTION_HINTS","LITERALS","BUILT_IN","CPP_KEYWORDS","type","literal","built_in","_type_hints","FUNCTION_DISPATCH","_hint","concat","lookahead","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","beginKeywords","FUNCTION_DECLARATION","returnBegin","excludeEnd","endsWithParent","match","name","aliases","classNameAliases","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/cpp.js"],"sourcesContent":["/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nmodule.exports = cpp;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}