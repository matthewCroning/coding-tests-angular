{"ast":null,"code":"/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex; // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n\n  const HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;","map":{"version":3,"names":["accesslog","hljs","regex","HTTP_VERBS","name","contains","className","begin","relevance","concat","either","end","keywords","illegal","module","exports"],"sources":["C:/Users/Matth/workspace/compiler/client/node_modules/highlight.js/lib/languages/accesslog.js"],"sourcesContent":["/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex;\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB,CADuB,CAEvB;;EACA,MAAMC,UAAU,GAAG,CACjB,KADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,KAJiB,EAKjB,QALiB,EAMjB,SANiB,EAOjB,SAPiB,EAQjB,OARiB,EASjB,OATiB,CAAnB;EAWA,OAAO;IACLC,IAAI,EAAE,mBADD;IAELC,QAAQ,EAAE,CACR;IACA;MACEC,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,kDAFT;MAGEC,SAAS,EAAE;IAHb,CAFQ,EAOR;IACA;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,SAFT;MAGEC,SAAS,EAAE;IAHb,CARQ,EAaR;IACA;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAEL,KAAK,CAACO,MAAN,CAAa,GAAb,EAAkBP,KAAK,CAACQ,MAAN,CAAa,GAAGP,UAAhB,CAAlB,CAFT;MAGEQ,GAAG,EAAE,GAHP;MAIEC,QAAQ,EAAET,UAJZ;MAKEU,OAAO,EAAE,IALX;MAMEL,SAAS,EAAE,CANb;MAOEH,QAAQ,EAAE,CACR;QACEE,KAAK,EAAE,iBADT;QAEEC,SAAS,EAAE;MAFb,CADQ;IAPZ,CAdQ,EA4BR;IACA;MACEF,SAAS,EAAE,QADb;MAEE;MACA;MACA;MACAC,KAAK,EAAE,mBALT;MAMEM,OAAO,EAAE,IANX;MAOEL,SAAS,EAAE;IAPb,CA7BQ,EAsCR;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,IAFT;MAGEI,GAAG,EAAE,IAHP;MAIEE,OAAO,EAAE,IAJX;MAKEL,SAAS,EAAE;IALb,CAtCQ,EA6CR;IACA;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,qBAFT;MAGEI,GAAG,EAAE,GAHP;MAIEE,OAAO,EAAE,IAJX;MAKEL,SAAS,EAAE;IALb,CA9CQ,EAqDR;IACA;MACEF,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE,GAFT;MAGEI,GAAG,EAAE,GAHP;MAIEE,OAAO,EAAE,IAJX;MAKEL,SAAS,EAAE;IALb,CAtDQ;EAFL,CAAP;AAiED;;AAEDM,MAAM,CAACC,OAAP,GAAiBf,SAAjB"},"metadata":{},"sourceType":"script"}